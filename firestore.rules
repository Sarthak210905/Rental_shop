
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users can only read/write their own document
    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid == userId;
    }

    // Products are publicly readable
    match /dresses/{dressId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /jewelry/{jewelryId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Bookings can be created by logged-in users, but only read by the owner or an admin
    match /bookings/{bookingId} {
      allow create: if request.auth.uid != null;
      allow read, update: if resource.data.userId == request.auth.uid || isAdmin();
    }
    
    // Discounts are publicly readable
    match /discounts/{discountId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    // All other collections are locked down by default
  }
}
